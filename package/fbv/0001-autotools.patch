diff --git a/COPYING b/COPYING
index 42a1b93..d60c31a 100644
--- a/COPYING
+++ b/COPYING
@@ -1,5 +1,340 @@
-The package is licensed under the GPL license, version 2.
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
 
-It was to large to include it here (bigger than the whole source).
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
+     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
 
-Obtain your copy from http://www.gnu.org
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Library General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year  name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Library General
+Public License instead of this License.
diff --git a/Makefile b/Makefile
deleted file mode 100644
index 30d0cc7..0000000
--- a/Makefile
+++ /dev/null
@@ -1,39 +0,0 @@
-#
-# Makefile
-#
-# Makefile for fbv
-
-CONF=Make.conf
--include $(CONF)
-
-CC	= gcc 
-CFLAGS  = -O2 -Wall -D_GNU_SOURCE
-
-SOURCES	= main.c jpeg.c gif.c png.c bmp.c fb_display.c transforms.c
-OBJECTS	= ${SOURCES:.c=.o}
-
-OUT	= fbv
-#LIBS	= -lungif -L/usr/X11R6/lib -ljpeg -lpng
-
-all: $(OUT)
-	@echo Build DONE.
-
-$(OUT): $(OBJECTS) $(CONF)
-	$(CC) $(LDFLAGS) -o $(OUT) $(OBJECTS) $(LIBS)
-
-$(CONF):
-	$(error Please run ./configure first...)
-
-clean:
-	rm -f $(OBJECTS) *~ $$$$~* *.bak core config.log $(OUT)
-
-distclean: clean
-	rm -f $(OUT) $(CONF) config.h
-
-install: $(OUT)
-	cp $(OUT) $(DESTDIR)$(bindir)
-	gzip -9c $(OUT).1 > $(DESTDIR)$(mandir)/man1/$(OUT).1.gz
-
-uninstall: $(DESTDIR)$(bindir)/$(OUT)
-	rm -f $(DESTDIR)$(bindir)/$(OUT)
-	rm -f $(DESTDIR)$(mandir)/man1/$(OUT).1.gz
diff --git a/Makefile.am b/Makefile.am
new file mode 100644
index 0000000..0caff07
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,18 @@
+## Process this file with automake to produce Makefile.in
+
+bin_PROGRAMS = fbv
+
+fbv_SOURCES = bmp.c fb_display.c gif.c jpeg.c main.c png.c transforms.c
+
+EXTRA_DIST = \
+	COPYING README.md VERSION \
+	fbv.1 \
+	autogen.sh
+
+noinst_HEADERS = \
+	fbv.h
+
+man_MANS = fbv.1
+
+clean-local:
+	rm -f *~
diff --git a/autogen.sh b/autogen.sh
new file mode 100755
index 0000000..8152272
--- /dev/null
+++ b/autogen.sh
@@ -0,0 +1,10 @@
+#!/bin/sh
+#
+echo "Generating build information using autoreconf"
+
+# All is done by autoreconf
+autoreconf -f -i
+
+# Run configure for this platform
+echo "Now you are ready to run ./configure"
+
diff --git a/configure b/configure
deleted file mode 100755
index 73b8fba..0000000
--- a/configure
+++ /dev/null
@@ -1,176 +0,0 @@
-#!/bin/sh
-##
-## fbv configuration script
-##
-
-# See TGT's ./configure script for in-depth comments, becouse this
-# one is delivered from it...
-
-# If You touch anything below, You're asking for trouble
-
-BASENAME=$(basename "$0")
-
-unset prefix
-unset infodir
-unset mandir
-unset srcdir
-unset bindir
-unset libs
-unset ungif
-unset jpeg
-unset png
-unset bmp
-unset dfb
-
-help(){
-cat << EOF >&2
-Usage: ./configure [options]
-Options: [defaults in brackets after descriptions]
-
-If a long option shows an argument as mandatory, then it is mandatory
-for the equivalent short option also.  Similarly for optional arguments.
-
-General:
-  --help	print this message
-  --libs=LIBS	additional libraries required (try -lX11 for ungif, -lz for PNG)
-  
-Directory and file names:
-  --prefix=PREFIX	install files in PREFIX [/usr/local]
-  --bindir=DIR		binary executable in DIR [PREFIX/lib]
-  --infodir=DIR		info documentation in DIR [PREFIX/info]
-  --mandir=DIR		man documentation in DIR [PREFIX/man]
-
-Features and packages:
-  --without-libungif	disable libungif support even if found
-  --without-libjpeg	disable libjpeg support even if found
-  --without-libpng	disable libpng support even if found
-  --without-bmp		disable bmp support
-EOF
-}
-
-# get options
-TEMP=$(getopt -o h \
---long help,\
-prefix:,srcdir:,bindir:,\
-infodir:,mandir:,\
-without-libungif,without-libjpeg,without-libpng,without-bmp,libs: \
--n "$BASENAME" -- "$@")
-
-if [ $? != 0 ] ; then help ; exit 1 ; fi
-#
-eval set -- "$TEMP"
-
-# process options
-while true ; do
-	case "$1" in
-		-h|--help) help ; exit 0 ;;
-		--libs) libs="$2"; shift 2 ;;
-		--prefix) prefix="$2" ; shift 2 ;;
-		--srcdir) srcdir="$2" ; shift 2 ;;
-		--bindir) bindir="$2" ; shift 2 ;;
-		--infodir) infodir="$2" ; shift 2 ;;
-		--mandir) mandir="$2" ; shift 2 ;;
-		--without-libungif) ungif="disabled" ; shift ;;
-		--without-libjpeg) jpeg="disabled" ; shift ;;
-		--without-libpng) png="disabled" ; shift ;;
-		--without-bmp) bmp="disabled" ; shift ;;
-
-		--) shift ; break ;;
-		*) help ; exit 1 ;;
-	esac
-done
-
-[ -z "$prefix" ] && prefix="/usr/local"
-[ -z "$bindir" ] && bindir="${prefix}/bin"
-[ -z "$mandir" ] && mandir="${prefix}/man"
-[ -z "$infodir" ] && infodir="${prefix}/info"
-
-cat << EOF | tee ./config.log >Make.conf
-prefix	= $prefix
-bindir	= $bindir
-mandir	= $mandir
-infodir	= $infodir
-EOF
-
-# tests
-rm -f \$\$~test \$\$~test.c
-cat > \$\$~test.c << EOF
-main()
-{
-}
-EOF
-###
-echo -n "checking for libungif presence... "
-if [ "$ungif" != "disabled" ]; then
-xdir="/usr/X11R6"
-ungif="no"
-echo "libungif check" >>./config.log
-echo "  1st:" >>./config.log
-cc 2>>./config.log >>./config.log -o \$\$~test \$\$~test.c -lungif $libs
-if [ -e \$\$~test ]; then
-	libs="-lungif $libs" ; ungif="yes"
-else
-	echo "  2nd: -lX11 -L$xdir/lib" >>./config.log
-	cc 2>>./config.log >>./config.log -o \$\$~test \$\$~test.c -lungif -lX11 -L$xdir/lib $libs
-	if [ -e \$\$~test ]; then
-	libs="-lungif -lX11 -L$xdir/lib $libs" ; ungif="yes"
-	fi
-fi
-rm -f \$\$~test
-fi
-echo $ungif
-echo "libungif: $ungif" >> ./config.log
-###
-echo -n "checking for libjpeg presence... "
-if [ "$jpeg" != "disabled" ]; then
-jpeg="no"
-cc 2>>./config.log >>./config.log -o \$\$~test \$\$~test.c -ljpeg $libs
-if [ -e \$\$~test ]; then
-	libs="-ljpeg $libs" ; jpeg="yes"
-fi
-fi
-echo $jpeg
-echo "libjpeg: $jpeg" >> ./config.log
-###
-echo -n "checking for libpng presence... "
-if [ "$png" != "disabled" ]; then
-png="no"
-cc 2>>./config.log >>./config.log -o \$\$~test \$\$~test.c -lpng $libs
-if [ -e \$\$~test ]; then
-	libs="-lpng $libs" ; png="yes"
-fi
-fi
-echo $png
-echo "libpng: $png" >> ./config.log
-###
-echo -n "building with bmp support... "
-if [ "$bmp" != "disabled" ]; then
-bmp="yes"
-fi
-echo $bmp
-echo "bmp: $bmp" >> ./config.log
-###
-rm -f \$\$~test \$\$~test.c
-###
-echo -n "checking for DEFAULT_FRAMEBUFFER... "
-if [ -n "$FRAMEBUFFER" ]; then
-	dfb="$FRAMEBUFFER"
-else
-	dfb="/dev/fb0"
-fi
-echo $dfb
-echo "fb: $dfb" >> ./config.log
-#
-echo >>Make.conf
-echo "LIBS	= $libs" | tee -a ./config.log >>Make.conf
-echo "#define IDSTRING \"fbv "`cat VERSION`", s-tech\"" | tee -a ./config.log >config.h
-echo "#define DEFAULT_FRAMEBUFFER \"$dfb\"" | tee -a ./config.log >>config.h
-[ "$ungif" != "disabled" ] && echo "#define FBV_SUPPORT_GIF" | tee -a ./config.log >>config.h
-[ "$jpeg" != "disabled" ] && echo "#define FBV_SUPPORT_JPEG" | tee -a ./config.log >>config.h
-[ "$png" != "disabled" ] && echo "#define FBV_SUPPORT_PNG" | tee -a ./config.log >>config.h
-[ "$bmp" != "disabled" ] && echo "#define FBV_SUPPORT_BMP" | tee -a ./config.log >>config.h
-echo "installation dir: $bindir"
-echo "manuals dir: $mandir"
-
-exit 0
-## EOF
diff --git a/configure.ac b/configure.ac
new file mode 100644
index 0000000..8b598f0
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,48 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+AC_INIT([fbv],[1.1])
+AC_CONFIG_SRCDIR([main.c])
+AM_INIT_AUTOMAKE([foreign no-dependencies])
+AC_CONFIG_HEADERS([config.h])
+AC_CANONICAL_HOST
+
+# Checks for programs.
+AC_PROG_CC
+
+# Checks for header files.
+AC_CHECK_HEADERS([fcntl.h stdlib.h string.h sys/ioctl.h sys/time.h termios.h unistd.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_C_INLINE
+
+# Checks for library functions.
+AC_FUNC_MALLOC
+AC_FUNC_MMAP
+AC_CHECK_FUNCS([munmap select strerror])
+
+# Checks for libraries.
+AC_SEARCH_LIBS([png_create_read_struct], [png], [
+	LIBS="-lpng"
+	CFLAGS="$CFLAGS -DFBV_SUPPORT_PNG"
+	], [
+	]
+)
+
+AC_SEARCH_LIBS([jpeg_create_decompress], [jpeg], [
+	LIBS="-ljpeg"
+	CFLAGS="$CFLAGS -DFBV_SUPPORT_JPEG"
+	], [
+	]
+)
+
+AC_SEARCH_LIBS([jpeg_create_decompress], [gif], [
+	LIBS="-lgif"
+	CFLAGS="$CFLAGS -DFBV_SUPPORT_GIF"
+	], [
+	]
+)
+
+CFLAGS="$CFLAGS -DFBV_SUPPORT_BMP"
+
+AC_CONFIG_FILES([Makefile])
+AC_OUTPUT
diff --git a/fb_display.c b/fb_display.c
index bdbc5ad..14fc0e1 100644
--- a/fb_display.c
+++ b/fb_display.c
@@ -111,6 +111,8 @@ void getCurrentRes(int *x, int *y)
     closeFB(fh);
 }
 
+#define DEFAULT_FRAMEBUFFER "/dev/fb0"
+
 int openFB(const char *name)
 {
     int fh;
diff --git a/main.c.old b/main.c.old
deleted file mode 100644
index 5824f52..0000000
--- a/main.c.old
+++ /dev/null
@@ -1,348 +0,0 @@
-/*
-	fbv  --  simple image viewer for the linux framebuffer
-	Copyright (C) 2000, 2001, 2003  Mateusz Golicz
-
-	This program is free software; you can redistribute it and/or modify
-	it under the terms of the GNU General Public License as published by
-	the Free Software Foundation; either version 2 of the License, or
-	(at your option) any later version.
-
-	This program is distributed in the hope that it will be useful,
-	but WITHOUT ANY WARRANTY; without even the implied warranty of
-	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-	GNU General Public License for more details.
-
-	You should have received a copy of the GNU General Public License
-	along with this program; if not, write to the Free Software
-	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-*/
-
-#include "config.h"
-#include "fbv.h"
-#include <stdio.h>
-#include <termios.h>
-#include <sys/time.h>
-#include <sys/types.h>
-#include <unistd.h>
-#include <getopt.h>
-#include <stdlib.h>
-#include <string.h>
-#define min(a,b) ((a) < (b) ? (a) : (b))
-#define max(a,b) ((a) > (b) ? (a) : (b))
-#define SHOWDELAY 100000
-#define NEXT_IMG -3
-#define PREV_IMG -4
-
-extern unsigned char * simple_resize(unsigned char * orgin,int ox,int oy,int dx,int dy);
-extern unsigned char * alpha_resize(unsigned char * orgin,int ox,int oy,int dx,int dy);
-extern unsigned char * color_average_resize(unsigned char * orgin,int ox,int oy,int dx,int dy);
-
-
-int clear=1,delay=0,hide=1,dispinfo=1,allowstrech=0,opt_alpha = 0, allow_enlarging = 0, ignore_ratio = 0;
-
-struct formathandler *fh_root=NULL;
-
-struct termios oldtermios;
-struct termios ourtermios;
-
-int imm_getchar(int s,int us)
-{
-	struct timeval tv;
-	unsigned char c;
-	fd_set fds;
-	FD_ZERO(&fds);
-	FD_SET(0,&fds);
-	tv.tv_sec=s; tv.tv_usec=us;
-	if(select(1,&fds,NULL,NULL,&tv))
-	{
-		read(0,&c,1);
-		return((int) c);
-	}
-	else
-	return(EOF);
-}
-
-void contoraw(void)
-{
-	tcgetattr(0,&oldtermios);
-	memcpy(&ourtermios,&oldtermios,sizeof(struct termios));
-	ourtermios.c_lflag&=!(ECHO|ICANON);
-	tcsetattr(0,TCSANOW,&ourtermios);
-}
-void connorm(void)
-{
-	tcsetattr(0,TCSANOW,&oldtermios);
-}
-
-
-void add_format(int (*picsize)(char *,int *,int*),int (*picread)(char *,unsigned char *,unsigned char**,int,int), int (*id)(char*))
-{
-	struct formathandler *fhn;
-	fhn=(struct formathandler*) malloc(sizeof(struct formathandler));
-	fhn->get_size=picsize; fhn->get_pic=picread; fhn->id_pic=id;
-	fhn->next=fh_root; fh_root=fhn;
-}
-#ifdef FBV_SUPPORT_GIF
-	extern int fh_gif_getsize(char *,int *,int*);
-	extern int fh_gif_load(char *,unsigned char *,unsigned char **, int,int);
-	extern int fh_gif_id(char *);
-#endif
-#ifdef FBV_SUPPORT_JPEG
-	extern int fh_jpeg_getsize(char *,int *,int*);
-	extern int fh_jpeg_load(char *,unsigned char *,unsigned char **, int,int);
-	extern int fh_jpeg_id(char *);
-#endif
-#ifdef FBV_SUPPORT_PNG
-	extern int fh_png_getsize(char *,int *,int*);
-	extern int fh_png_load(char *,unsigned char *,unsigned char **,int,int);
-	extern int fh_png_id(char *);
-#endif
-#ifdef FBV_SUPPORT_BMP
-	extern int fh_bmp_getsize(char *,int *,int*);
-	extern int fh_bmp_load(char *,unsigned char *,unsigned char **, int,int);
-	extern int fh_bmp_id(char *);
-#endif
-
-void init_handlers(void)
-{
-#ifdef FBV_SUPPORT_GIF
-	add_format(fh_gif_getsize,fh_gif_load,fh_gif_id);
-#endif
-#ifdef FBV_SUPPORT_JPEG
-	add_format(fh_jpeg_getsize,fh_jpeg_load,fh_jpeg_id);
-#endif
-#ifdef FBV_SUPPORT_PNG
-	add_format(fh_png_getsize,fh_png_load,fh_png_id);
-#endif
-#ifdef FBV_SUPPORT_BMP
-	add_format(fh_bmp_getsize,fh_bmp_load,fh_bmp_id);
-#endif
-}
-
-struct formathandler * fh_getsize(char *name,int *x,int *y)
-{
-	struct formathandler *fh;
-	for(fh=fh_root;fh!=NULL;fh=fh->next)
-	{
-		if(fh->id_pic(name))
-			if(fh->get_size(name,x,y)==FH_ERROR_OK) return(fh);
-	}
-	return(NULL);
-}
-
-int show_image(char *name)
-{
-	int x,y,xs,ys,xpos,ypos,xdelta,ydelta,c,eol,xstep,ystep,rfrsh,imx,imy;
-	unsigned char *buffer;
-	unsigned char *alpha = NULL;
-	struct formathandler *fh;
-	eol=1;
-	if((fh=fh_getsize(name,&x,&y)))
-	{
-		buffer=(unsigned char *) malloc(x*y*3);
-		if(fh->get_pic(name,buffer,&alpha,x,y)==FH_ERROR_OK)
-		{
-			if(clear) { printf("\033[H\033[J"); fflush(stdout); usleep(SHOWDELAY); } /* temporary solution */
-			if(dispinfo) printf("%s\n%s\n%d x %d\n",IDSTRING,name,x,y); 
-			contoraw();
-			getCurrentRes(&xs,&ys);
-			if((x>xs || y>ys) && allowstrech)
-			{
-				if(ignore_ratio)
-				{
-					if(x > xs)
-						imx = xs;
-			
-					if(y > ys)
-						imy = ys;
-				}
-				else
-				{
-					if( (y*xs/x) <= ys)
-					{
-						imx=xs;
-						imy=y*xs/x;
-					}
-					else
-					{
-						imx=x*ys/y;
-						imy=ys;
-					}
-				}
-			
-				if(allowstrech==1)
-					buffer=simple_resize(buffer,x,y,imx,imy);
-				else
-					buffer=color_average_resize(buffer,x,y,imx,imy);
-
-				if(alpha)
-					alpha=alpha_resize(alpha,x,y,imx,imy);
-
-				x=imx; y=imy;
-			}
-			
-			if(((x < xs) || (y < ys)) && allow_enlarging)
-			{
-				int new_x, new_y;
-				if(ignore_ratio)
-				{
-					if(x < xs)
-						new_x = xs;
-					if(y < ys)
-						new_y = ys;
-				}
-				else
-				{
-				
-				}
-			}
-		
-			if(x<xs) xpos=(xs-x)/2; else xpos=0;
-			if(y<ys) ypos=(ys-y)/2; else ypos=0;
-			xdelta=0; ydelta=0;
-
-			xstep=min(max(x/20,1),xs);
-			ystep=min(max(y/20,1),ys);
-
-			for(eol=-1,rfrsh=1;eol==-1;)
-			{
-				if(rfrsh)
-					fb_display(buffer, opt_alpha ? alpha : NULL, x,y,xdelta,ydelta,xpos,ypos);
-				rfrsh=0;
-				if(!delay)
-				{
-					c=getchar();
-					switch(c)
-					{
-						case 'a': case 'D':
-							xdelta-=xstep;
-							if(xdelta<0) xdelta=0;
-							rfrsh=1;
-							break;
-						case 'd': case 'C':
-							if(xpos) break;
-							xdelta+=xstep;
-							if(xdelta>(x-xs)) xdelta=x-xs;
-							rfrsh=1;
-							break;
-						case 'w': case 'A':
-							ydelta-=ystep;
-							if(ydelta<0) ydelta=0;
-							rfrsh=1;
-							break;
-						case 'x': case 'B':
-							if(ypos) break;
-							ydelta+=ystep;
-							if(ydelta>(y-ys)) ydelta=y-ys;
-							rfrsh=1;
-							break;
-						case ' ': case 10: eol=1; break;
-						case 'r': rfrsh=1; break;
-						case '.': case '>': eol=NEXT_IMG; break;
-						case ',': case '<': case 127: case 255: eol=PREV_IMG; break;
-						case 'q': eol=0; break;
-					}
-				}
-				else
-				{
-					if(imm_getchar(delay / 10,delay % 10)=='q') eol=0; else eol=1;
-					break;
-				}
-			}
-			connorm();
-			if(clear) { printf("\033[0m\033[H\033[J"); fflush(stdout); }
-		}
-		else
-			printf("Unable to read file !\n");
-		free(buffer);
-		free(alpha);
-	}
-	else
-		printf("Unable to read file or file format not recognized!\n");
-	
-	return(eol);
-}
-
-void help(char *name)
-{
-	printf("Usage: %s [options] image1 image2 image3 ...\n\n"
-		   "Available options:\n"
-		   " --help 	| -h : Show this help\n"
-		   " --alpha 	| -a : Use alpha channel (if applicable)\n"
-		   " --noclear 	| -c : Do not clear the screen before/after displaying image\n"
-		   " --unhide 	| -u : Do not hide/show the cursor before/after displaying image\n"
-		   " --noinfo 	| -i : Supress image information\n"
-		   " --stretch	| -f : Strech (using a simple resizing routine) the image to fit onto screen if necessary\n"
-		   " --colorstretch | -k : Strech (using a 'color average' resizing routine) the image to fit onto screen if necessary\n"
-		   " --enlarge	  | -e : Enlarge the image to fit the whole screen if necessary\n"
-		   " --ignore-ratio | -r : Ignore the image aspect while resizing\n"
-			   " --delay 	| -s <delay> slideshow, wait 'delay' tenths of a second before displaying each image\n\n"
-		   "Use a,d,w and x to scroll the image\n\n"
-		   "fbv 0.99 Copyright (C) 2000 - 2003 Mateusz Golicz, Tomasz Sterna.\n", name);
-}
-
-extern int optind;
-extern char *optarg;
-
-int main(int argc,char **argv)
-{
-	int opt,a,r;
-	
-	static struct option long_options[] =
-	{
-	{"help",	no_argument,	0, 'h'},
-	{"noclear", 	no_argument, 	0, 'c'},
-	{"alpha", 	no_argument, 	0, 'a'},
-	{"unhide",  	no_argument, 	0, 'h'},
-	{"noinfo",  	no_argument, 	0, 'i'},
-	{"stretch", 	no_argument, 	0, 'f'},
-	{"colorstrech", no_argument, 	0, 'k'},
-	{"delay", 	required_argument, 0, 's'},
-	{"enlarge",	no_argument,	0, 'e'},
-	{"ignore-ratio", no_argument,	0, 'r'},
-	{0, 0, 0, 0}
-	};
-
-	init_handlers();																	   
-	
-	if(argc<2)
-		help(argv[0]);
-	else
-	{
-		for(;;)
-		{
-			opt=getopt_long_only(argc,argv,"achukfis:er",long_options,NULL);
-			if(opt==EOF) break;
-			switch(opt)
-			{
-				case 'a': opt_alpha = 1; break;
-				case 'c': clear=0; break;
-				case 's': if(optarg) delay=atoi(optarg); break;
-				case 'u': hide=0; break;
-				case 'h': help(argv[0]); break;
-				case 'i': dispinfo=0; break;
-				case 'f': allowstrech=1; break;
-				case 'k': allowstrech=2; break;
-				case 'e': allow_enlarging = 1; break;
-				case 'r': ignore_ratio = 1; break;
-			}
-		}
-		if(argv[optind]==NULL) {printf("You have to specify a filename!\n"); return(1);}
-		while(imm_getchar(0,0)!=EOF);
-		if(hide) printf("\033[?25l");
-		for(a=optind;argv[a]!=NULL;a++) 
-		{
-			r=show_image(argv[a]);
-			if(!r) break;
-			if(r==PREV_IMG)
-			{
-				if((a-1)>=optind)
-					a-=2;
-				else
-					a-=1;
-			}
-		}
-		if(hide) printf("\033[?25h");
-	}
-	return(0);
-}
